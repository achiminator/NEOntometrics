version: '3.4'
services:
  # Redis Image is necessary for the asyncronous scheduling in the docker application
  redis-scheduler:
    restart: always
    container_name: neontoscheduler
    image: redis
    ports:
     - '6379:6379'

  # Creates the tables necessary in the database
  migrateDB:
    restart: "no"
    container_name: migrationService
    build:
      dockerfile: Dockerfile
      context: ./Git-Extension
    image: neontometrics:latest
    depends_on:
      - neontometrics_db
    environment:
      db_password: 'KMmsWrwRBBeQLXDO'
      inDocker: "True"
    command: [ "bash", "-c", "python", "manage.py", "makemigrations", "rest", "--noinput", "&&", "python", "manage.py", "migrate" ]

  # This is the main application for the git metric aggregation
  neontometricsapi:
    restart: always
    container_name: neontometrics
    image: neontometrics:latest
    # The starting of the mySQL-Database takes longer than the start up of the django webapp.

    # Wait-for-it.sh ensures that the database is up and running before starting django.
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    #command: 'python manage.py runserver 0.0.0.0:8000'
    ports:
      - '8086:8000'
    depends_on:
      - neontometrics_db
      - migrateDB
    environment:
      db_password: 'KMmsWrwRBBeQLXDO'
      inDocker: "True"
    volumes:
      - gitStorage:/code/repositoryCollection:ro

  neontometrics_worker:
    restart: always
    image: neontometrics:latest
    command: ["python",  "manage.py",  "rqworker"]
    deploy:
      replicas: 3
    depends_on:
      - neontometricsapi
      - neontometrics_db
      - migrateDB
    environment:
      db_password: 'KMmsWrwRBBeQLXDO'
      isWorker: "True"
      inDocker: "True"
    volumes:
      - gitStorage:/code/repositoryCollection:rw

  # the REST-Calculation Engine
  opi:
    ports:
      - '8085:8080'
    restart: always
    container_name: opi
    environment:
      JVM_OPTS: -Xmx14g -Xms13g -XX:MaxPermSize=4g
    build:
      context: ./Opi
    image: opi:latest

  # The flutter Frontend
  frontend:
    ports:
      - '8888:8000'
    restart: always
    container_name: neontometricsfrontend
    build:
      context: ./frontend
    volumes:
     - ./Git-Extension/staticfiles:/web/djangostatic:ro
    image: neontometricsfrontend:latest

  # The Database for metric documentation
  neontometrics_db:
    restart: always
    container_name: neontometrics_db
    command: ["mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"] # Without specifying utf8mb4, utf8mb3 is used, hindering the storage of emoticons.
    image: mariadb:latest
    ports:
      - '3366:3306'
    environment:
      MYSQL_DATABASE: neontometrics
      MYSQL_USER: neontometrics
      MYSQL_PASSWORD: KMmsWrwRBBeQLXDO
      MYSQL_ROOT_PASSWORD: KMmsWrwRBBeQLXDO
    volumes:
      - neontometricsdb:/var/lib/mysql
    
    # Analytics Service
  matomo:
    restart: always
    container_name: matomo
    image: matomo:latest
    environment:
      MATOMO_DATABASE_HOST: neontometrics_db
      MATOMO_DATABASE_USERNAME: neontometrics
      MATOMO_DATABASE_PASSWORD: KMmsWrwRBBeQLXDO
      MATOMO_DATABASE_DBNAME: matomo
    ports:
    - 6377:80
    volumes:
    - matomo:/var/www/html

volumes:
  neontometricsdb:
  gitStorage:
  matomo: